输入一系列文件和文件夹路径，写一个算法输出分组，要求：
1. 每个分组所有文件总大小不超过100M，但尽可能接近100M
2. 文件大小超过100M则跳过
3. 文件夹大小超过100M则获取子文件和子文件夹，作为新的输入
注意：
1. 文件夹大小是指它所有子文件的总大小
2. 用c实现
3. 每个分组可以包括文件和文件夹
4. 所有数字用long long类型
5. 代码写出后分析问题并优化，进行5轮后输出代码
输出分组后打印格式：
1. 先打印每个分组的情况：总大小，有多少个文件和文件夹
2. 再详细打印每组的文件和文件夹和它们的大小，文件在前文件夹在后
3. 最后统计并总结此次分组的情况：平均每组大小，算法耗时
程序最后：
1.
验证分组后的所有文件和文件夹有没有遗漏（总大小+跳过的文件的总大小是否小于输入的总大小）
2. 打印验证结果的具体情况

解决中文乱码问题
解决异常推出不报错误信息的问题

1. 把运行算法，打印结果，释放内存等放到新定义的测试函数里
2. 封装一个函数，参数两个：输入文件文件夹数组和输出结构体GroupResult

扫描文件夹: d/a5/
文件夹 d/a5/ 总大小: 759.55 MB, 包含 5198 个文件, 2 个文件夹
没有其他文件夹了，扫描出来的总文件数却有10400，会不会是a5文件夹重复扫描了2遍？

改成当git_file_count == 0时直接退出程序

每组进行git add和git commit操作
git add后面跟多个路径，命令长度不超过20000
git commit -F commit-info.txt
commit-info.txt为exe文件传入的参数
最后git push

每次commit时commit-info.txt的内容做下区分
